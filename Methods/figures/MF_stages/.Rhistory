readLines("points.dat")
strsplit(readLines("points.dat"), " ")
strsplit(readLines("points.dat"), " ")[[1]]
coords = strsplit(readLines("points.dat"), " ")[[1]]
str(coords)
class(coords)
typeof(coords)
lapply(coords, strsplit, " ")
lapply(coords, strsplit, "/")
coords = strsplit(readLines("points.dat"), ", ")[[1]]
lapply(coords, strsplit, "/")
as.data.frame(lapply(coords, strsplit, "/"))
emframe(coords)
library(tidyverse)
library(sqldf)
library(plotrix)
emframe(coords)
enframe(coords)
enframe(coords) %>% separate(value, into = c("x", "y"), sep = "/")
enframe(coords) %>% separate(value, into = c("x", "y"), sep = "/") %>% mutate(x = as.numeric(x), y = as.numeric(y))
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_generator.R', echo=TRUE)
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_generator.R', echo=TRUE)
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_generator.R', echo=TRUE)
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_generator.R', echo=TRUE)
View(data)
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_generator.R', echo=TRUE)
View(P)
filename = "points.dat"
coords = strsplit(readLines(filename), " ")[[1]]
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_generator.R', echo=TRUE)
View(P)
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_generator.R', echo=TRUE)
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_generator.R', echo=TRUE)
P1 <- new("partition",id=1, x=2.5, y=7.5, width=2.5)
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_replicator.R', echo=TRUE)
P1$x
P1@x
contains <- function(P, x, y){
return(P@x - P@width <= x && P@x + P@width <= x && P@y - P@width <= y && P@y + P@width <= y)
}
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_replicator.R', echo=TRUE)
contains(P1, 6,1)
contains(P1, 6, 1)
contains(P1, 1, 6)
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_replicator.R', echo=TRUE)
contains(P1, 6, 1)
contains(P1, 1, 6)
contains(P1, 5, 5)
contains <- function(P, x, y){
Xmin = P@x - P@width
Xmax = P@x + P@width
Ymin = P@y - P@width
Ymax = P@y + P@width
return( Xmin <= x && x <= Xmax &&  Ymin <= y && y <= Ymax)
}
contains(P1, 5, 5)
contains(P2, 5, 5)
contains(P4, 5, 5)
contains(P7, 5, 5)
contains(P3, 5, 5)
contains(P5, 5, 5)
contains(P6, 5, 5)
points
P
P %>% filter(contains(P1, x, y))
P %>% filter(contains(P2, x, y))
P %>% filter(contains(P3, x, y))
P %>% filter(contains(P4, x, y))
P %>% filter(contains(P5, x, y))
P %>% filter(contains(P6, x, y))
P %>% map(contains, P1, x, y)
P %>% map(function(x, y) x + y)
P %>% map(function(x) x$x + x$y)
P %>% map(function(x) x)
P %>% map(function(x) x$x)
P %>% map(function(p) p$x)
P %>% map(function(p) p@x)
P %>% map(function(p) p[1])
P %>% map(function(p) p[[1]])
P %>% map(function(p) p[1]$x)
P %>% map(function(p) p[[1]]$x)
P %>% map(function(p) p$x)
P %>% map(function(p) p.x)
P %>% pmap_dfr(function(...) { current = tibble(...) })
P %>% pmap_dfr(function(...) { current = tibble(...)
print(current$x)
})
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_replicator.R', echo=TRUE)
View(points1)
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_replicator.R', echo=TRUE)
View(pointsAndPartitions)
pointsAndPartitions %>% filter(4 < x && x < 6)
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_replicator.R', echo=TRUE)
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_replicator.R', echo=TRUE)
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_replicator.R', echo=TRUE)
View(pointsAndPartitions)
pointsAndPartitions %>% filter(4 < x && x < 6)
?filter
pointsAndPartitions %>% filter(x > 5)
pointsAndPartitions %>% filter(x > 5 & x < 6)
pointsAndPartitions %>% filter(x > 5 && x < 6)
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_replicator.R', echo=TRUE)
pointsAndPartitions %>% filter(x > 5 & x < 6)
source('~/Documents/PFlocks/Methods/figures/MF_stages/MF_replicator.R', echo=TRUE)
pointsAndPartitions %>% filter(x > 5 & x < 6)
pointsAndPartitions %>% filter(x > 4 & x < 6)
pointsAndPartitions %>% filter(x > 4 & x < 6 & y > 4 & y < 6)
